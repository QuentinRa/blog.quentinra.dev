https://fr.wikipedia.org/wiki/Th%C3%A9orie_spectrale_des_graphes
https://fr.wikipedia.org/wiki/Taux_d%27expansion_(th%C3%A9orie_des_graphes)
https://fr.wikipedia.org/wiki/Graphe_dual
https://fr.wikipedia.org/wiki/Line_graph

Stabilité
	Un ensemble stable S est un sous-ensemble tel que les sommets de l'ensemble ne sont jamais
	voisins.

	Stable maximal : on ajoute un sommet et il n'est plus stable

	Stable maximum : on ne peut pas créer d'ensemble S plus grand. On note :math:`\alpha (G) = card(stable\ maximum)`

	Soit h le degré maximal et n le nombre de sommets, :math:`|Stable\ maximal| \ge \lceil \frac{n}{h+1} \rceil`.

Partitionnement
	On peut partitionner un graphe en cliques. Une partition

		* est un ensemble de cliques
		* tous les sommets doivent être dans une clique
		* les sommets doivent être présent dans exactement une clique

	:math:`|S| \le |P|`. Si :math:`|S| = |P|` alors S est stable maximum et P une partition minimum.

Ensemble absorbant
	Une ensemble A absorbant est un ensemble tel que tout sommet qui
	n'est pas dans l'ensemble est un successeur d'un sommet dans A.

	:math:`\beta (G) = card(plus\ grand\ ensemble\ absorbant)`

Noyau
	Sous-ensemble stable et absorbant.

	Un graphe peut avoir 0,1 ou plusieurs noyaux.


Fonction de grundy
	Soit un graphe orienté, la fonction de grundy g(v) retourne le plus petit
	entier non attribué aux successeurs de v.

	Tous les sommets ayant comme valeur 0 sont censés composer le noyau (vérifiez!).

	Il est recommandé de partir d'un sommet qui n'a pas de prédécesseur,
	car il fait forcément parti du noyau.

Bases de cycle et cocycles
============================

Base de cycles
	On considère l'ensemble des arrêtes V ordonné. On note chaque cycle
	est comme un ensemble qui associe à chaque arrête une valeur : 0,1,-1.

		* 0 : si le cycle ne parcours par l'arrête
		* 1 : si le cycle parcours l'arrête dans le bon sens
		* -1 : si le cycle parcours l'arrête dans le sens inverse

	On note un cycle :math:`C_n = (0, ...,1,-1)`

	Une base de cycles B est un ensemble de cycles, tels
	que la base de cycles est libre et génératrice.

	On note :math:`\mu(G)` (mu) le nombre d'éléments d'une base de cycle,
	appelé nombre cyclomatique. math:`\mu(μ(G) = m − n + p` avec n sommets m arcs et p composantes
	connexes.

Base de cocycles
	On appelle cocycle de A, l'ensemble des arcs incidents à A,
  noté :math:`\omega{(A)}`. On associe à chaque arc une valeur

  		* 0 : si le cocycle ne parcours par l'arrête
  		* 1 : si le cocycle parcours l'arrête dans le bon sens
  		* -1 : si le cocycle parcours l'arrête dans le sens inverse

  .. hint::

   	En gros il faut que les sommets du cocycles soit incidents à tous les autres

  Une base de cycle est un ensemble de cocycles, tel que la base
  soit libre et génératrice.


	On note :math:`\gamma(G)` (gamma) le nombre d'éléments d'une base de cocycle,
 	appelé nombre cocyclomatique. math:`\gamma(μ(G) = n - p` avec n sommets et p composantes
  connexes.

Graphes planaires et isomorphisme
========================================

Planaire
	Un graphe est planaire si on peut le représenter tel qu'aucune arrête ne traverse
	une autre arrête.

	On appelle Graphe planaire topologique la représentation planaire d'un graphe planaire.

	Un graphe est planaire si n-m+f = 2 avec n sommets, m arrêtes et f faces (donc f=m-n+2).

Isomorphe
	Deux graphes sont isomorphes si on peut obtenir la même représentation en déplaçant
	des arrêtes

Face
	Une face est une région d'un graphe planaire délimitée/entourée par des arrêtes.

	Les arrêtes externes (celles vers l'extérieur) du graphe délimites la face
	dite infinie.

Frontière et contour
	On appelle frontière ou contours, les arrêtes qui entourent une face.

	Le contour cependant est un cycle élémentaire et ne dépend pas de la représentation.

	Dans un graphe planaire topologique, les contours forment une base de cycles.

Graphe dual
	Un graphe dual noté G* est un graphe dans lequel les sommets sont
	les faces de G et les arrêtes leur frontières.

Mineur d'un graphe
	Le mineur d'un graphe G est obtenu en effectuant un nombre quelconque d'opérations parmi :

		* supprime un sommet isolé (d(sommet) = 1)
		* supprime une arrête
		* contracte une arrête : les deux sommets aux extrémités sont fusionnés.

-------
G planaire connexe -> m < 3n -5
G planaire connexe et 1 face finie, ya au moins un sommet e tel que d(e) < 6

Kuratowski
	Les graphes K3,3 et K5 ne sont pas planaires. Tout graphe
	contenant un sous-graphe qui soit l'un de ces deux là n'est pas planaire.

Robertson–Seymour
	Graphe est planaire ssi il ne contient pas comme mineur K3,3 et K5

Couplage d'un  graphe
	Sous-ensemble d'arêtes de G tel que 2 arrêtes sont non adjacentes.

	| Maximal : on ne peut pas ajouter une arête sinon c'est plus un couplage
	| Maximum : il n'existe pas de couplage plus grand
	| Parfait : tous les sommets sont reliés à une arrête dans le couplage

	Algorithme

		.. code::

			1: On prends un arrête.
				2: On supprime toutes les autres arrêtes liées à l'un des sommet de notre arrête
				3: On refait 1
			4: Le couplage maximal est l'ensemble des arrêtes prises en 1.

Coloration
=============================

L'objectif est de colorier un graphe avec un minimum de couleurs
tel que deux sommets incidents ont une couleur différente.

nombre chromatique
		On note :math:`\gamma(G)` (gamma) le nombre chromatique soit le nombre
		minimum de couleurs requises pour colorier le graphe.

:math:`\gamma(G)` est difficile à trouver, mais on peut l'approcher
	* si un graphe n'est pas planaire, :math:`\gamma(G)=|V|`
	* si un graphe est stable, :math:`\gamma(G)=1`
	* si un graphe est complet, :math:`\gamma(G)=|V|`
	* si un graphe est planaire, :math:`\gamma(G) \le 4`
	* minorant : :math:`\gamma(G) \ge |clique maximum|` (taille d'une clique maximum = ordre)
	* majorant : :math:`\gamma(G) \le d_max(G)+1`

Algorithme glouton de Welsh-Powell
	.. code:: None

		Je trie les sommets par degré décroissants.
		Tant que tous les sommets ne sont pas coloriés,
			Je prends une couleur et colorie tous les sommets à condition
			qu'il ne soit pas voisins d'un sommet que je viens de colorier
			de cette couleur.

.. note::

	Pour savoir si c'est la solution optimale, on compare la nombre chromatique
	au minorant.

Algorithme Reliement-contraction
	Les opérations sont

		* On contracte = fusion deux sommets ayant la même couleur
		* On relie = ajoute une arrête, si deux sommets sont de couleur différente

	L'idée est :

	.. code::
			1: Jusqu'à ce que toute nos graphes soient des cliques
				2: On créée deux sous-graphe :
					- un obtenu par reliement
					- un obtenu par contraction

			Le degré de la plus petite clique est le nombre chromatique.
			Les sommets ensembles (contractés) sont de la même couleur.

	.. note::

		2^m possibilités, avec m le arrêtes manquantes au graphe de départ pour qu'il
		soit complet donc complexité exponentielle.

Coloration des arrêtes
--------------------------

On peut aussi colorier les arrêtes, on parlera d'indice chromatique
plutôt que nombre.

Line Graph
	Le graphe des arrêtes associé à G noté L(G) est un graphe tel que

			* un sommet de L est une arrête de G
			* deux arêtes de L ne sont reliées que si elles ont un sommet commun dans G

	L'indice chromatique est égal au nombre chromatique de L(G).

Arbres
=============================

Un graphe qui respecte l'un de ces propriétés (qui sont équivalentes)
est un arbre

	*	connexe et sans cycle
	*	Il existe un unique chaîne reliant deux sommet x,y
	*	connexe mais ne l’est plus si on retire une arrête
	*	sans cycle mais ne l’est plus si on ajoute une arrête
	* connexe et |E| =|V| -1
	*	sans cycle et |E| =|V| -1

Arbre couvrant
	Soit T un arbre couvrant de G, alors T est un graphe partiel connexe
	et sans cycle de G soit un graphe partiel qui est arbre.

	Ce graphe partiel n'existe que si G est connexe.

	Les arêtes retirées pour obtenir le graphe partiel forment
	une base de cycles.

Arbre couvrant de poids minimum (ACM)
	Soit un graphe **donné** non orienté connexe et ayant des arêtes pondérées donc
	avec une valeur/un poids.

	Un Arbre couvrant de poids minimum (ACM) est arbre couvrant donc la somme des poids
	des arêtes est minimale.

	Algorithme de Kruskal

		.. code::

			On colorie tous nos sommets.
				Tant qu'on peut toujours ajouter des arrêtes sans créer de cycle
						On prends les arrêtes avec les plus petit poids
							si on ne crée pas de cycle, on ajoute l'arête
							puis on recommence avec les nouvelles arêtes au plus petit poids


	Algorithme de Prism

  		.. code::

  			1: On prends un sommet.
  				2: On ajoute toutes les arrêtes de notre sommet
  					3: On garde l'arrête de poids minimal qui ne crée pas de cycle
  						4: On continue mais en ajoutant les nouvelles arrêtes de notre nouveau sommet
  						et on recommence 3: