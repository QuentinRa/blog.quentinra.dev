-----------------------------------------------------------------
------------------------- Unity
-----------------------------------------------------------------

Hierarchy important in 2D => Render order
=> last => last rendered

Can modify even when the game is running
=> lost

Project Windows => warehouse
=> keep things tidy

Console tab

Rider? Export game?
=> preferences
=> splash

----- shortcuts

Rotate: alt + left mouse
pan around: Shift + middle mouse
F : focus in the hierarchy
CTRL-D : duplicate
Wheel: scroll
CTRL-Z : rollback
F2: rename
CTRL and move to move something nicely

Alt expand/collapse: expand/collpase all

-----------------------------------------------------------------
------------------------- Game Objects
-----------------------------------------------------------------

Create new one
=> Object inside another
=> Group
=> child are following its parent => position relative to parent

transform.position
transform.Rotate(_rotatingAxis, Time.deltaTime * angle, Space.World);
=> local axis (Space.Self) or global axis (Space.World)

Z-fighting
=> two items at the same location, overlapping
=> bug when rendering
=> trick: increase the z-values by 0.01

Avoid changing the scale => performance issues
=> pain in the ass

Prefabs = Prefabricated game objects
=> double click: prefabs editing mode (hierarchy prefabs, ...)
=> bold + blue mark if modified (value itself is bold too) => right click => revert (or apply to prefabs)
=> in the "first line" we got override to see were the prefabs was changed (+ select prefabs)

-----------------------------------------------------------------
------------------------- Scenes
-----------------------------------------------------------------

SceneLoader.LoadScene("name") => set the scene in the loadable scenes

-----------------------------------------------------------------
------------------------- Level
-----------------------------------------------------------------

Empty Game object "level"
=> put tiles inside

-----------------------------------------------------------------
------------------------- Input
-----------------------------------------------------------------

...

-----------------------------------------------------------------
------------------------- Camera
-----------------------------------------------------------------

Use the position to set objects/camera, not your intuitive guess

remove background => set color => dark

-----------------------------------------------------------------
------------------------- Components
-----------------------------------------------------------------

Add components?
=> remove useless components like colliders (added by default) on child+parent => merge
=> right-click : remove

OnTriggerEnter2D => run when our object collides with another
=> give both a collider set to trigger
=> one of them must have a rigid body

RigidBody => kinematic : no gravity
=> add gravity + physics

USE TAGS in collider easy to guess with who collided

GetComponent<Renderer>().enabled = true;

-----------------------------------------------------------------
------------------------- Materials
-----------------------------------------------------------------

Mesh filter => tell the graphic card which mesh should be rendered (ex: cube, capsule, ...) (click circle dot to check)
=> later: important 3D from blender => you will see them here

Mesh renderer => tells GC how to render a mesh

Material
=> smoothness 0 : not shinning
=> drag and drop it directly on a game object (either in hierarchy/scene)

-----------------------------------------------------------------
------------------------- LIGHT and SHADOWS
-----------------------------------------------------------------

Light => shader => copy
=> https://github.com/TwoTailsGames/Unity-Built-in-Shaders
=> https://github.com/adrian-miasik/unity-shaders

Directional light => rotate => black :(
=> Lightning => Environment => source: color

cast shadow (mesh rendered) off for walls
=> wall is not casting shadows on the player

Torch
=> point light orange
=> shadow type: hard => projected on the wall

=> light with the sun transparent (mesh)

-----------------------------------------------------------------
------------------------- Useful methods
-----------------------------------------------------------------

------ general

Instantiate(obj, pos, rot)
Destroy(obj)
Destroy(obj, time_before_death)
SendMessageUpwards("StopMoving");

----- vector

new Vector3().normalized (do not move faster diagonally if used set position)
Vector2.MoveTowards(start, target, speed) => easy for follow something
_targetBounds.Intersects(_myRenderer.bounds) // Check collision
if (Vector3.Distance(_targetBounds.center,_myRenderer.bounds.center) <= 0.001f) // near

------ coroutine

StartCoroutine(WaitForSecondsAndShow());
private IEnumerator WaitForSecondsAndShow()
{
	yield return new WaitForSeconds(2f);
}

-----------------------------------------------------------------
------------------------- Random bunch of notes
-----------------------------------------------------------------

Click on the "..." and debug to enable debug mode
=> ex: shadow casting on
=> do it from the code

In 2D: freeze rotation (good for platformers)
=> camera INSIDE the player => follow

-----------------------------------------------------------------
------------------------- UserInterface (UI)
-----------------------------------------------------------------

<details class="details-e">
<summary>UI Builder (2020.3+, upcoming)</summary>

**In 2021, you might look at the UI Builder**, to create user interfaces (UI), like in [this video](https://www.youtube.com/watch?v=NQYHIH0BJbs&ab_channel=CocoCode).
</details>

<details class="details-e">
<summary>Canvas</summary>

Create a **canvas** (UI > Canvas), this is a component used to store every UI components. You may switch to 2D, as it will make your life easier.

* load a background
  * create a new ui > image
  * anchor presets: alt + stretch x/y (bottom right corner)
  * then drag and drop an image into the slot
  * you may have to transform your image into a sprite
  * [video here](https://www.youtube.com/watch?v=RsgiYqLID-U&ab_channel=CocoCode)
  * to make a **blur** background (like your game behind the UI) it's complicated
* you create buttons with ui > buttons, then set the text, you may set an image as a background (you may look into [9patch](https://www.construct.net/en/make-games/manuals/construct-3/plugin-reference/9-patch), explained in the video too)
* you create labels with ui > text, then set the text
* you can use layouts (like in Java) but using anchors may be enough for a simple UI ([video here](https://www.youtube.com/watch?v=HwdweCX5aMI&ab_channel=GameDevGuide))
* if you want some resizing (and you are not using anchors) then
  * add a "canvas scaler" to your canvas
  * set scale mode to "scale with the screen size"
  * and give it a size

You can make your hierarchy looks better using this [plugin](https://github.com/febucci/unitypackage-custom-hierarchy) following this [video](https://www.youtube.com/watch?v=Gma7IXPj4wI&ab_channel=CocoCode)

You may create advanced buttons like in this [video](https://www.youtube.com/watch?v=cW-E4WEogzE&ab_channel=CocoCode)
* create a button add a text and an image
* add a horizontal layout component to the button
* set the spacing, ...
* then on the image, you can add a layout element to resize the image
* you can add a "content size fitter" to make the button resize itself (set fit to preferred size)
</details>

PauseMenu
GameOverMenu
...