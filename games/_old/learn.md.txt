-----------------------------------------------------------------
------------------------- Unity
-----------------------------------------------------------------
Object pooling => List register/unregister entries inside => function to use "entries"

Enable post-processing in the scene bar

Assets store from the project

Documentation shortcut

SearchBar => full name of the component or a game object

You can use calculations in the editor, they are evaluated

Icons=>scene see icons

Change editor color in play mode to not forget?

Lightning => auto generate => disable if level goes darker

Drag and drop scene to add it in the build

https://github.com/UnityCommunity/UnityLibrary
https://unitylist.com/
https://github.com/cmilr/Unity2D-Components
-----------------------------------------------------------------
------------------------- Game Objects
-----------------------------------------------------------------
=> arrow on each game object "go to prefab"
-----------------------------------------------------------------
------------------------- Scenes
-----------------------------------------------------------------
Scene references => removed after moving up.
-----------------------------------------------------------------
------------------------- Tile map
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Input
-----------------------------------------------------------------
GetComponent<Button>().onClick.AddListener(() => {});
GetComponent<Button>().onClick.AddListener(MyMethod);
-----------------------------------------------------------------
------------------------- Camera
-----------------------------------------------------------------
ScreenToWorldPoint
Cursor.visible = false;
-----------------------------------------------------------------
------------------------- Components
-----------------------------------------------------------------
Collider => edit => CTRL-click to remove

Rigidbody
=> lower mass=pushed back
=> drag => slow down
=> MovePosition

Distance Joint

FindObjectOfType

===========
particles system
=> material
=> emission => rate over time 0 (once?) => turn => add entry
=> shape => way particles are thrown => lifetime, speed
=> color and lifetime => 0% and 100% color => fade out

============
Audio source
=> drag and drop in audio clip

===========
Vector3.Reflex -> become <-
=> normalize??? return one value
=> https://danielilett.com/2019-09-08-unity-tips-3-interpolation/
-----------------------------------------------------------------
------------------------- Scripts
-----------------------------------------------------------------
{get; private set;}

Invoke("method", delay)

PlayerPrefs
-----------------------------------------------------------------
------------------------- Materials
-----------------------------------------------------------------
emission
-----------------------------------------------------------------
------------------------- Animations
-----------------------------------------------------------------
Mixamo
=> FBX model => import
=> Select animation
    => download (FBX, 60 FPS, no keyframe reduction)
    => check "in-place" then download (Collada =textures, once, FBX for unity = model + animation) => animation+character?

https://readyplayer.me/
https://sketchfab.com/
https://polynook.com/tutorial/how-to-export-models-from-blender-to-unity/

Import FBX in unity
=> animation type => humanoid
=> configure avatar definition => match our character
=> animation => loop => bake into pose???
=> ??? click on materials => extract => fix now
-----------------------------------------------------------------
------------------------- LIGHT and SHADOWS
-----------------------------------------------------------------
Light => shader => copy
=> https://github.com/TwoTailsGames/Unity-Built-in-Shaders
=> https://github.com/adrian-miasik/unity-shaders

Directional light => rotate => black :(
=> Lightning => Environment => source: color

cast shadow (mesh rendered) off for walls
=> wall is not casting shadows on the player

Torch
=> point light orange
=> shadow type: hard => projected on the wall

=> light with the sun transparent (mesh)
-----------------------------------------------------------------
------------------------- Random bunch of notes
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- UserInterface (UI)
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- FAQ
-----------------------------------------------------------------