-----------------------------------------------------------------
------------------------- Unity
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Game Objects
-----------------------------------------------------------------
bad idea to drag and drop games objects to be referenced in a script.
-----------------------------------------------------------------
------------------------- Scenes
-----------------------------------------------------------------
Don't destroy on load
=> Singleton<T>
=> https://blog.mzikmund.com/2019/01/a-modern-singleton-in-unity/
=> https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html
-----------------------------------------------------------------
------------------------- Tile map
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Input
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Camera
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Components
-----------------------------------------------------------------

Create Manager => give a script Controller to each child
=> script is returning an enum "WhoIAm"
=> GetComponentsInChildren<>()

-----------------------------------------------------------------
------------------------- Scripts
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- Materials
-----------------------------------------------------------------
-----------------------------------------------------------------
------------------------- LIGHT and SHADOWS
-----------------------------------------------------------------

Light => shader => copy
=> https://github.com/TwoTailsGames/Unity-Built-in-Shaders
=> https://github.com/adrian-miasik/unity-shaders

Directional light => rotate => black :(
=> Lightning => Environment => source: color

cast shadow (mesh rendered) off for walls
=> wall is not casting shadows on the player

Torch
=> point light orange
=> shadow type: hard => projected on the wall

=> light with the sun transparent (mesh)

-----------------------------------------------------------------
------------------------- Useful methods
-----------------------------------------------------------------

------ general

SendMessageUpwards("StopMoving");
bounds.Intersects(_myRenderer.bounds) // Check collision

------ coroutine

StartCoroutine(WaitForSecondsAndShow());
private IEnumerator WaitForSecondsAndShow()
{
	yield return new WaitForSeconds(2f);
}

-----------------------------------------------------------------
------------------------- Random bunch of notes
-----------------------------------------------------------------

Click on the "..." and debug to enable debug mode
=> ex: shadow casting on
=> do it from the code

The image size must be a power of two, so you can compress it. You can compress sounds too (50% seems good).

You can and should group variables. You can use `[Header("name")]` / `[Space(value)]` before your variables declarations.

In RigidBodyComponent, in `Interpolate`, enable interpolation for the main character, as the [documentation is suggesting](https://docs.unity3d.com/ScriptReference/Rigidbody-interpolation.html).

Enable `post-processing` in rendering.

-----------------------------------------------------------------
------------------------- UserInterface (UI)
-----------------------------------------------------------------
Unity recommends having one canvas.
-----------------------------------------------------------------
------------------------- FAQ
-----------------------------------------------------------------

Platformer

isGrounded => check collider with the floor
=> or, check if not colliding with someone
=> bug between two colliders

=> camera INSIDE the player => follow

Rigidbody => freeze Z and rotation
=> apply 0 friction => run in a cliff