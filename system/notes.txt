Tabulation : autocompletion
Flèches (bas/haut) pour revenir à la commande précédente

dirname
basename

Possible de grouper des instructions
avec () ou {} (par exemple pour && ou ||)

$$ variable qui contient le pid du shell

!n = faire la n-ieme commande de l'historique
!ls = dernière commande qui commence par ls
!! = dernière commande

<<EOF
contenu
EOF

case mot in
	motif )
		code
		;;
	motif1 | motif2 )
		code
		;;
	*)
		code défaut
		;;
esac

-n : chaine non vide
-z : chaine vide

-e : fichier existe et pas lien mort
-h : fichier existe et lien symbolique
-r, -w, -x : existe et peut être r/w/x

cd - : revenir au dernier répertoire avant celui-ci
$OLDPWD (variable)

tty : voir son numéro de tty

On peut écrire dans le terminal d'un autre
avec cat /dev/tty1 > /dev/tty2 par exemple.

commande uniq

xdg-open
xpdf

stty erase m (delete suppr)
stty eof f
(change les caractères)

Fichiers
------------

/dev/zero
/dev/random

dd # crée un fichier
# -count : taille = nombre de bloc de 512o
# if="src" : source
# of="dest" : destination
# bs : taille d'un bloc

Multiplicateurs de terminaux :
----------------------------------------

Screen : screen –S <nom du nouveau terminal>
Pour se déplacer entre les terminaux : Ctrl-a-d
Revenir à un terminal : screen –r <nom du terminal>

Tmux : Lancer tmux : tmux
Créer un terminal vertical : ctrl-b % et un terminal horizontal : ctrl-b et sans cotes '"'
Supprimer un terminal : ctrl-b x
Pour changer : ctrl-b ->
Fermer les terminaux : ctrl-b d

args
----

shift n : décale les arguments ($2 devient $1, ...)

set -- valeur, valeur, ...

définit les valeurs de $1, $2, ...

variable locale (globale par défaut)
local v
local v=6

peut activer le débug avec
#!bash -x

$* $@

duplication de fd
--------------------

int dup(int fd); : duplique fd et le retourne

int dup2(int old, int new); : le descripteur
old accède au descripteur de new, qui est fermé si ouvert. fait que le descripteur
de new accède au même flux que old. Ferme new si ouvert.

int fileno(File* f) : retourne le descripteur noyau.

exec
----------------------

char* getenv
setenv
unsetenv

int main(..., char* env[]);