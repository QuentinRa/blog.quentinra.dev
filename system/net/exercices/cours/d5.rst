================================
4. Synthèse des notions
================================

.. image:: https://img.shields.io/badge/correction-non%20vérifiée-red.svg?style=flat&amp;colorA=E1523D&amp;colorB=007D8A
   :alt: correction non vérifiée

1. \
	**L’établissement de la liaison de communication avec l’entité vis-à-vis**
	**est une phase complexe des protocoles.**

Non, il suffit de déterminer un port utilisé pour communiquer
et qu'une machine ai l'adresse mac des autres.

Oui, si vous n'avez que les adresses IP, alors le protocole ARP sera enclenché ce qui est complexe
car notre machine va envoyer le message a toutes les machines du réseau "est tu <ip>?"
et seulement la machine correspondante répondra si elle existe. On obtiendra alors
les macs qui nous permettrons de communiquer.

2. \
	**Un protocole de niveau N est défini indépendamment de la couche**
	**N-1 sur laquelle il s’appuie.**

Oui, les communications se font en passant par l'API.

Le cours spécifie que les couches sont indépendantes.

3. \
	**Un protocole peut être implanté sur n’importe quel autre protocole**
	**qui s'appuie sur la couche N-1.**

Non, un protocole ne peut implementer que des protocoles de la couche
N-1 et non des protocoles de la même couche. Il deviendrait sinon
un protocole de la couche supérieure.

Par exemple Firefox implémente HTTP mais apache ne peut pas implémenter Firefox
tout en étant au même niveau que Firefox (tous deux des applications utilisant un
protocol de la couche 7: application).

4. \
	**Soit A et B, 2 mises en oeuvre d’une présentation API d’un protocole**
	**P, écrites par 2 personnes différentes. A et B peuvent elles communiquer ?**

En théorie A et B réalisent la même API donc s'ils ont bien codés
alors oui ils peuvent communiquer (donc si le code des fonctions
respecte bien les conditions imposées par l'API qui ne peuvent être vérifiées
qu'a l'exécution : que tous les entiers soient en BigEndian, utiliser
la méthode x pour sérialiser une valeur, ... L'API ne dicte pas le code mais
déclare uniquement les services donc seulement la forme peut être vérifiée. Dans la documentation,
il y a souvent des détails de fond à respecter donc c'est au programmeur de bien respecter les indications de l'API).

5. \
	**Soit A une mise en oeuvre d’une présentation API1 d’un protocole**
	**P, et B une mise en oeuvre d’une présentation API2 d’un protocole**
	**P. A et B peuvent elles communiquer ?**

Non, il s'agit de deux API différentes d'un protocol, donc le fonctionnement
du protocole via l'API est différent.

6. \
	**Dans l’automate qui spécifie le dialogue d’un protocole N apparait**
	**les services du protocole N-1.**

Un protocole de niveau N (ex: Firefox) va implémenter
un protocole de niveau N-1 (ex: HTTP) en écrivant du code
pour que les services de l'API (ici: HTTP) marchent.

Cependant, le protocole de N ne va pas spécifier dans son automate
les services de N-1 car ils seront bien utilisés mais dans le code,
donc ce ne sera pas apparent (à tout moment le code peut changer, et on pourra utiliser
d'autres services du N-1) donc Non.

7. \
 	**La mise en oeuvre d’un protocole de niveau N utilise les services du**
	**protocole N-1.**

Oui un protocole peut utiliser les services des protocoles
au niveau N-1, c'était tout l'objectif lorsque le modèle OSI
puis TCP/IP ont découpé la structure en couches.

8. \
	**La mise en oeuvre d’un protocole de niveau N-1 appelle les services**
	**du protocole N.**

Non, un protocole ne peut utiliser que les services des protocoles
au niveau N-1 (sinon les couches ne seraient pas indépendantes, toujours de N vers N-1 et pas N-1 vers N).

9. \
	**Un protocole peut-il ne pas avoir de service?**

Un protocole qui n'a pas de services ne ferait rien
cependant rien n'interdit ce genre de comportement
donc je dirais oui.

10. \
	**Une entité d’un protocole peut-elle ne pas avoir de service?**

Oui, enfin je suppose. Une entité de protocole est une partie d'un protocole généralement
un processus, donc il est possible de déléguer la réalisation des services
à une autre entité protocolaire.

**Crédits**
	* Quentin RAMSAMY--AGEORGES (étudiant à l'ENSIIE)