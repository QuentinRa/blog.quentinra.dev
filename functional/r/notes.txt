| When you are at the R prompt (>):
| -- Typing skip() allows you to skip the current question.
| -- Typing play() lets you experiment with R on your own; swirl will ignore what you
| do...
| -- UNTIL you type nxt() which will regain swirl's attention.
| -- Typing bye() causes swirl to exit. Your progress will be saved.
| -- Typing main() returns you to swirl's main menu.
| -- Typing info() displays these options again.

help.start()

Cours
----------------------

Installation
Présentation
Console
	taper expression = affiche la valeur
	help ?

Autres
-------------------

structure$key = récupérer une valeur particulière.
vecteur[v:v2] prends de v à v2

paste(my_char, collapse = " ")
paste(LETTERS, 1:4, sep = "-")

// ajouter un élément au vecteur
c(my_char, "Quentin")

1:3 = créer un vecteur de taille 3-1+1
allant de 1 à 3 inclus.

LETTERS = vecteur qui contient l'alphabet

Graphique
-----------

plot(runif(10), main = "Titre du graphique")

// lire fichier
cat(readLines("https://pbil.univ-lyon1.fr/R/donnees/demo.r"), sep = "\n")
//exécute
source("https://pbil.univ-lyon1.fr/R/donnees/demo.r")

Valeurs manquantes
-------------------

Il arrive souvent que des valeurs soient manquantes. Il est intéressant
de chercher pourquoi.

rnorm(1000)  vector containing 1000 draws from a standard normal distribution
z <- rep(NA, 1000) vecteur qui contient 1000 fois NA

my_data <- sample(c(y, z), 100) 100 éléments de la concaténation des 2

is_na() indique si na

sum(my_na) true=1 et false=0

NaN = not a number

Inf = infini

x[1:10] : de 1 à 10

x[is.na(x)] is.na : vecteur des positions des na
x[vecteur]

Indices commencent à 1
R ne se fâche pas si vous utilisez des mauvais indexes
donc il faut faire attention.

Si vous mettez un - devant l'indexe, alors tout sera
affiché sauf cette/ces indexes.
x[-c(2, 10)]

tableau d'éléments nommés :
c(nom = valeur)
names() : obtenir les noms

on peut assigner les noms avec
names(vect) <- c("foo", "bar", "norf")

identical check si pareil
vect["bar"]

matrices : 1 type
dataframes : * type

dim() : dimension, NULL vecteur
dim(my_vector) <- c(4, 5)

length() : taille vecteur

attributes(my_vector) : voir les attributs

class(my_vector) : type

créer une matrice
matrix()

// donne des noms aux colonnes
cbind(patients, my_matrix)

// frame avec que des colonnes
// patients puis valeurs
my_data <- data.frame(patients, my_matrix)
// mettre des noms aux colonnes
colnames(my_data) <- cnames

print

On peut appeler une variable variable.nom.


plot(x = taille, y = poids) : produit une graphe
taille = axe x
poids = axe y

plot(x = valeurs_x, y = valeurs_y, pch = 19, col = "royalblue3",
las = 1, main = "titre", xlab = "titre axe [x]",
ylab = "titre axe [y]")

legend
lines
boxplot = carré
dotchart(table(rpois(500, lambda = 2)), pch = 19)

help.start()
help.search("logarithm") = ??gauss
example(fonction) voir des exemples

suite de 100 nombres entre 0 et 100
seq(from = 0, to = 100, length = 100)

paquets
------------------

Librairies sont dans des paquets.

library()
library(ISwR)
installed.packages() // voir la liste

install.packages("swirl") // installer
library(swirl) // lancer