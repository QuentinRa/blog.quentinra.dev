GET POST PUT DELETE
Content-type

Most web servers today run web services using a common stateless web architecture known as REST,
which stands for REpresentational State Transfer.
Web services that offer this architecture are known as RESTful services.

Retrofit Library
https://github.com/square/retrofit

* private const val BASE_URL
* private val retrofit = Retrofit.Builder()
    * opt: .addConverterFactory(ScalarsConverterFactory.create())
    .baseUrl(BASE_URL)
    .build()
interface XXXApiService {
    @GET("route") // get request to retrosfit
    fun assMethod()
}

object MarsApi {
    val retrofitService : MarsApiService by lazy {
       retrofit.create(MarsApiService::class.java) }
}

MarsApi.retrofitService.YOU
catch (e: Exception)

A ViewModelScope is the built-in coroutine scope defined for each ViewModel in your app.
Any coroutine launched in this scope is automatically canceled if the ViewModel is cleared.
viewModelScope.launch {}

-------------------
private val moshi = Moshi.Builder()
    .add(KotlinJsonAdapterFactory())
    .build()

private val retrofit = Retrofit.Builder()
    .addConverterFactory(MoshiConverterFactory.create(moshi))
    .baseUrl(BASE_URL)
    .build()

interface BonPariApiService {
    @GET("parties")
    suspend fun getAllGames() : List<Match>
}

object BonPariApi {
    val retrofitService : BonPariApiService by lazy {
        retrofit.create(BonPariApiService::class.java) }
}
-------------------

moshi
https://github.com/square/moshi
// Moshi
implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'

// Retrofit with Moshi Converter - replace previous imports
implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

http://10.0.2.2:3000/

data class XXX(
    @Json(name = "img_src_if_needed")
    with the fields of the JSON
)

private val moshi = Moshi.Builder()
   .add(KotlinJsonAdapterFactory())
   .build()

.addConverterFactory(MoshiConverterFactory.create(moshi))

top-level function = not in a class

----------------

https://coil-kt.github.io/coil/
If you got URL but ImageView slot
implementation "io.coil-kt:coil:1.1.1"
https://developer.android.com/codelabs/basic-android-kotlin-training-internet-images

----------------
OhMY

Use dataBinding
https://developer.android.com/codelabs/basic-android-kotlin-training-internet-images