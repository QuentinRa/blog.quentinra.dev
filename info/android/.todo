* Pick android version
* Switch Project View
* Device emulator
* Android Tests + Advanced testing
=> https://developer.android.com/codelabs/android-basics-kotlin-write-instrumentation-tests
=> https://developer.android.com/codelabs/android-basics-kotlin-affirmations-test-lists-and-adapters
* You got options to do things faster using right-click.
* Android Application Lifecycle

https://developer.android.com/docs
https://developer.android.com/teach

https://developer.android.com/codelabs/basic-android-kotlin-training-polished-user-experience
=> Talkback
=> Tint/Dark mode

FrameLayout: a single child view.
> * Replace `ConstraintLayout` in the .fxml with `FrameLayout`
> * Or click on `ConstraintLayout` in the layer tree > Convert view > `FrameLayout`

> **Remainder**: try to rotate the screen, and see if the view is still fine. If not, you may use a ScrollView, disable rotation...

@StringRes
@DrawableRes
@LayoutRes

-----------------
recyclerView.layoutManager = LinearLayoutManager(this)
// Adds a [DividerItemDecoration] between items
recyclerView.addItemDecoration(
    DividerItemDecoration(this, DividerItemDecoration.VERTICAL)
)

@RequiresApi(Build.VERSION_CODES.LOLLIPOP)

<resources>
    <string-array name="words">
    </string-array>
</resources>

context.resources.getStringArray(R.array.words).toList()

title = getString(R.string.detail_prefix) + " " + letterId
-----------------
An intent is an object representing some action to be performed. There are two kinds of intents

* explicit: for everything related to your app (ex: launch another activity)
* implicit: this is a type of action that you request another app, or the system to do
    * open link
    * share something
    * ...

holder.myButton.setOnClickListener {
            val context = holder.itemView.context
            val intent = Intent(context, MainActivity::class.java)
            intent.putExtra("param", holder.myButton.text.toString())
            context.startActivity(intent)
        }

val someParam = intent?.extras?.getString("param").toString()
println("param is $someParam")
-----------------

## Material Design

Material design is a library of pre-made components. Google recommends to use Material UI components as much as possible. The list [of Material components for Android can be found here](https://material.io/components?platform=android).

* Text field: `TextInputLayout` (see [text field](https://material.io/components/text-fields/android#using-text-fields))
* Switch: `SwitchMaterial` (create a switch, change the type in the .xml)

<details class="details-e">
<summary>Icons</summary>

* Open the resources manager
* "+" > new vector asset
* click on the android icon for "clip art"
* select an icon

For Android 20, or older versions, you need to add `vectorDrawables.useSupportLibrary = true` in build.gradle > Android > defaultConfig.

</details>

********
Icon
********

different manufacturers may show app icons in a different shape than
the circular icon shape :  square shape, rounded square, or squircle (between a square and circle)...

https://developer.android.com/training/multiscreen/screendensities#TaskProvideAltBmp

Adaptive icons since v26
=> background
=> foreground
=> + new image asset
    => new assets should be moved in the same folder v26

https://developer.android.com/codelabs/basic-android-kotlin-training-display-list-cards
3 => easy way to import icon

https://developer.android.com/reference/com/google/android/material/card/MaterialCardView