* Pick android version
* Switch Project View
* Device emulator
* Android Tests + Advanced testing
=> https://developer.android.com/codelabs/android-basics-kotlin-write-instrumentation-tests
=> https://developer.android.com/codelabs/android-basics-kotlin-affirmations-test-lists-and-adapters
* You got options to do things faster using right-click.

https://developer.android.com/codelabs/basic-android-kotlin-training-livedata Talkback enabled

https://developer.android.com/docs
https://developer.android.com/teach
https://developer.android.com/guide
https://developer.android.com/develop/ui

> **Remainder**: try to rotate the screen, and see if the view is still fine. If not, you may use a ScrollView, disable rotation...

Permissions: https://developer.android.com/guide/topics/permissions/overview

@StringRes
@DrawableRes
@LayoutRes

-----------------
LinearLayout
- layout_weight
- layout_orientation

Values are in 10dp
-----------------
@RequiresApi(Build.VERSION_CODES.LOLLIPOP)

<resources>
    <string-array name="words">
    </string-array>
</resources>

context.resources.getStringArray(R.array.words).toList()
----------------

Resource type: Menu
=> Menu Item
    id
    title
    icon
    showAsAction
    => always: not in overflow

ContextCompat.getDrawable(this, R.drawable.ic_grid_layout)

override fun onCreateOptionsMenu(menu: Menu?): Boolean {
   menuInflater.inflate(R.menu.your_menu_layout, menu)

   // find menu item
   menu?.findItem(R.id.some_menu_item)

   return true
}

override fun onOptionsItemSelected(item: MenuItem): Boolean {
   return when (item.itemId) {
       R.id.some_menu_item -> {
            // ...
            return true
       }
       //  Otherwise, do nothing and use the core event handling
       else -> super.onOptionsItemSelected(item)
   }
}
----------------
https://developer.android.com/guide/components/activities/activity-lifecycle
Do rotating really create/destroy the app? -> rotating must be enabled (:
OnPause: when share opened, screen partially visible, paused
Whatever code runs in onPause() blocks other things from displaying, so keep the code in onPause() lightweight.
For example, if a phone call comes in, the code in onPause() may delay the incoming-call notification.
----------------
AndroidManifest
=> activities
    => intent-filter
-------------