* Pick android version
* Switch Project View / IntelliJ-features
=> download sources
* Device emulator
=> Layout Inspector
=> Advanced controls (charging...)
=> double-click on navbar
=> App inspection (API 26+, Android Studio): inspect workers
* Access context in viewModel, see WorkManager

https://codelabs.developers.google.com/?cat=Android

------- Material -------

Material design is a library of pre-made components. Google recommends to use Material UI components as much as possible. The list [of Material components for Android can be found here](https://material.io/components?platform=android).

* Text field: `TextInputLayout` (see [text field](https://material.io/components/text-fields/android#using-text-fields))
* Switch: `SwitchMaterial` (create a switch, change the type in the .xml)

TextInputLayout comes with a built-in functionality to display error messages.
xxx.error = getString(R.string.error)
xxx.error = null // clear
xxx.isErrorEnabled = true

style="?attr/materialButtonOutlinedStyle"

https://m3.material.io/design/material-studies/shrine.html

------- Icons --------

different manufacturers may show app icons in a different shape than
the circular icon shape :  square shape, rounded square, or squircle (between a square and circle)...

https://developer.android.com/training/multiscreen/screendensities#TaskProvideAltBmp

Adaptive icons since v26
=> background
=> foreground
=> + new image asset
    => new assets should be moved in the same folder v26

https://developer.android.com/codelabs/basic-android-kotlin-training-display-list-cards
3 => easy way to import icon

https://developer.android.com/reference/com/google/android/material/card/MaterialCardView

------------------
A task is a collection of activities
Activities are arranged in a stack, known as a back stack
where each new activity the user visits gets pushed onto the back stack for the task
back = remove act on top and destroy it "popping an activity off the stack"
if no more, back to home

There is also a fragment stack in an activity
Navigation library

On an action, there is an attribute "popUpTo". It means that
destination in the stack will be popped off until the last one is the given one.
You may want to even remove the given one, by setting "popUpToInclusive" to true.
For instance, if you start wit A, go to D, and go back to A with popUpTo, you will have AA.
--------------
Call executePendingBindings() after setting the property, which causes the update to execute immediately.
This is important, because it forces the data binding to execute immediately,
which allows the RecyclerView to make the correct view size measurements.
Situation: using images.

@BindingAdapter("listData")
fun bindRecyclerView(recyclerView: RecyclerView, data: List<MarsPhoto>?) {
    val adapter = recyclerView.adapter as PhotoGridAdapter
    adapter.submitList(data)
}
----------
@WorkerThread
@Throws(FileNotFoundException::class)
-------------
To fix this, you need to tell the RecyclerView not to clip the inner contents to the padding using android:clipToPadding attribute.
 This makes it draw the scrolling view in the padding area. Go back to layout/fragment_overview.xml. Add android:clipToPadding attribute
 for the RecyclerView, set it to false.
--------
_status.value = MarsApiStatus.LOADING