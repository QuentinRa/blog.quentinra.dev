https://attacomsian.com/blog/nodejs-password-hashing-with-bcrypt
https://github.com/travist/jsencrypt
https://www.npmjs.com/package/nodejs-jsencrypt
http://travistidwell.com/jsencrypt/
https://github.com/ArnaudValensi/node-jsencrypt
https://www.devglan.com/spring-mvc/rsa-encryption-in-javascript-and-decryption-in-java
https://travistran.me/rsa-encryption-in-java-and-javascript-1275/
https://stackoverflow.com/questions/23818842/rsa-encryption-javascript-and-decrypt-java
https://stackoverflow.com/questions/8397047/what-secretkeyfactory-not-available-does-mean
https://stackoverflow.com/questions/992019/java-256-bit-aes-password-based-encryption/992413#992413
https://mkyong.com/java/java-aes-encryption-and-decryption/
https://stackoverflow.com/questions/273396/aes-encryption-what-are-public-and-private-keys
https://www.base64decoder.io/javascript/

https://stackoverflow.com/questions/46227696/send-data-from-javafx-made-form-to-http-post-request
https://www.npmjs.com/package/socketio-file-upload
https://stackoverflow.com/questions/12817173/how-to-emit-a-file-through-socket-io
https://hassansin.github.io/socket.io-rethinkdb-file-transfer
https://stackoverflow.com/questions/46009837/upload-image-with-socketio-file-upload
https://metamug.com/article/java/okhttp-post-request.html

https://www.geeksforgeeks.org/how-to-validate-data-using-validator-module-in-node-js/
https://nodejs.org/en/knowledge/advanced/buffers/how-to-use-buffers/
https://nodejs.org/en/knowledge/file-system/how-to-read-files-in-nodejs/

Vous pouvez aussi télécharger nodemon pour que votre script soit relancé s’il crash ou est modifié,
 très pratique pour un bot discord par exemple (npm install -g nodemon avec g pour global).