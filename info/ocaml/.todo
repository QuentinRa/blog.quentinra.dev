https://www2.ocaml.org/learn/tutorials/structure_of_ocaml_programs.html
https://ocaml.org/manual/index.html#sec6
https://ocamlverse.github.io/
https://dev.realworldocaml.org/index.html
https://ocaml-learn-code.com/

https://ocaml.org/learn/tutorials/functional_programming.html

https://thealmarty.com/2018/09/25/lambda-calculus-in-ocaml-fun-and-function/
https://www.cs.bham.ac.uk/~axj/pub/papers/lambda-calculus.pdf

https://github.com/esy/esy/issues/1232
https://en.wikipedia.org/wiki/ML_(programming_language)#Examples
https://ocaml.org/manual/index.html
https://ocaml.org/releases/4.12/ocaml-4.12-refman.pdf
https://ocaml.org/learn/tutorials/functional_programming.html
https://www.ocaml.org/learn/tutorials/a_first_hour_with_ocaml.html

* everything is a value: you can give a function to a function (higher-order function etc.), you can return a function.
* typing implicit: you don't have to write the types
* immutables: you can change the value inside a variable, unless you are destroying the old one and creating one with the same name
* purity: no side-effects, a function must returns something, no print, we should be able to predict the behavior of the program

https://github.com/giraud/reasonml-idea-plugin
https://giraud.github.io/reasonml-idea-plugin/

ocamlfind ocamlc -o test -package extlib,oUnit -linkpkg -g avl.ml test.ml

https://www.cs.cornell.edu/courses/cs3110/2021sp/textbook/intro/intro.html

=> http://barbier.iiens.net/Cours/IPF3/%5bS3%5d%20++IPF3%20slides%20-%20decembre%202018%20-%20Phoko.pdf

---------------------------

opam switch create 4.07.0
https://giraud.github.io/reasonml-idea-plugin/docs/contributing/plugin-architecture

.bashrc instead of /etc/profile
/etc/bash.bashrc : all

Set-Item -LiteralPath Env:PATH -Value "usr/bin"
Get-ChildItem Env:

cd "C:\Users\quent\Desktop\opam\bin"
Set-Item -LiteralPath Env:PATH -Value "C:\Users\quent\Desktop\opam\bin"
.\opam init --root "..\portable" --bypass-checks -a --no-setup --bare
.\opam switch create 4.12.0 --root "..\portable"

.\opam install ocamlformat  --root "..\portable" --yes
.\opam update  --root "..\portable"
.\opam upgrade --root "..\portable"
rename .exe

---------------------------

You may read some articles

* [Wikipedia](https://en.wikipedia.org/wiki/Functional_programming#Concepts)
* [GeeksForGeeks](https://www.geeksforgeeks.org/functional-programming-paradigm/)
* French: https://leblogducodeur.fr/introduction-a-la-programmation-fonctionnelle/ (reported down - 12/08/2021)

https://ocaml.org/docs/up-and-running
https://ocaml.org/docs/functional-programming

-------------

https://cs3110.github.io/textbook/chapters/interp/parsing.html