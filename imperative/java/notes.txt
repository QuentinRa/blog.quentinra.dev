http://www.swig.org/Doc1.3/Java.html#java_basic_tour
https://stackoverflow.com/questions/15565947/java-wrapper-for-c-code
https://nachtimwald.com/2017/06/06/wrapping-a-c-library-in-java/
https://stackoverflow.com/questions/5963266/call-c-function-from-java

------------------

surcharge ?
final variable;

Constructeur par défaut, valué, de copie (Deep/Shallow)

this()

méthode/classe final

passage valeur/référence.

itérateur

------ introspection
.class/getClass()
Class.isInstance()
Class.getSimpleName()

------ Interfaces fonctionnelles

Un grand nombre d’interfaces du JDK ne déclarent qu’une
seule méthode abstraite : Single Abstract Method

l’annotation @FunctionalInterface force le compilateur à vérifier
ces conditions
@FunctionalInterface

Méthodes default ou de object ne comptent pas.

Forme particulière de l’appel explicite des méthodes par défaut de l’interface mère
ComplexFuncInterface.super.doSomeOtherWork();

------ Classes sympas

JOptionPane //affiche un popup de dialog
System //retourne un saut de ligne du système, système d'exploitation actuel, ...
JFileChooser //sélectionner un fichier