## Burp

Intruder

* use Intruder to fuzz for subdirectories, endpoints, or virtual hosts
* CTRL+I
* Options to flag results?
* ยง (silcrows ) not $ stupid
* automatically detected
* you can do it on headers too!
* 4 attack types
  * Sniper is the first and most common attack type (one set of payloads). If we have two values, it will try replacing the first by every word, then the second, but not both at the same time. (#words * #parameters). We attack only one parameter.
  * Battering Ram: take one too, but replace every param by the nth word. (#words)
  * Pitchfork is the attack type you are most likely to use. One payload set (wordlist) per parameter. The first of each tried simulataneously. (20 max)
  * Cluster bomb: test every combination (20 max, one w per p). #w1 * #wn. Create a hude amount of traffic, CE rate-limited.
* Payload set
  * Simple lists
  * Numbers (range...)
* Payload Processing: ex: capitalize, add prefix, add suffix...
* Start attack
  * Mark results as errors (based on response code/size) to filter results. We can click on a column to sort results.
* https://tryhackme.com/room/burpsuiteintruder (macros)
* Decoder
  * Input something, then use the menus to apply transformation on it (smart decode much like cyber-chief magic)
  * / is %2f (https://www.asciitable.com/ ascii then hex)
  * Gzip: Gzip provides a way to compress data. It is widely used to reduce the size of files and pages before they are sent to your browser.
  * Colors to see what transformation
* Comparer
  * Intercept requests
  * Repeater
  * If long responses
  * Send to comparer
  * Then identify what changed
* Sequencer allows us to measure the entropy (or randomness, in other words) of "tokens"
  * Live capture: capture a request generating tokens
  * Manual load: load a list of captured tokens
* "Cross-Site Request Forgery (CSRF) token protecting a form submission"
* https://tryhackme.com/room/burpsuiteom
* Extender
*  Burp App Store BApp Store (ex: Request Timer for time-based responses)
* Logger++
* Jython to use Python modules
* JRuby... https://github.com/jruby/jruby