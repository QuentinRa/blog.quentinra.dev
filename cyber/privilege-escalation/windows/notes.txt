<hr class="sep-both">

## Windows handy commands

*For a complete list of commands, you may check [Windows server shell reference](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands).*

<div class="row row-cols-md-2"><div>

Most Linux commands are available, although they are aliases to Windows commands

* `cd`: move to another folder
* `ls`: list files in a folder
* `pwd`: path to the current directory
* `cat`: print (usually small) files
* `find`: find a file/folder
* `wget`: download something
* `clear`: clear the terminal
* `gcm command`: find the executable given a command ([source](https://stackoverflow.com/questions/304319/is-there-an-equivalent-of-which-on-the-windows-command-line))

cmd commands

* `cd` / `find`
* `dir`: same as ls
* `type`: same as cat
* `cls`: same as clear

Open a Windows shell

* `powershell`: Linux-friendly console
* `cmd`: The traditional Windows console. Most commands in this course won't work on it. CMD options are usually like `/xxx`.
* `wmic` ([doc](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wmic)): a deprecated console since Windows 10 21H1
</div><div>

Learn more about your environment

* `ver` (cmd): see Windows version
* `whoami`: see your username, or `NT AUTHORITY\SYSTEM` (root)
* `whoami /groups`: see your groups
* `hostname`: see hostname
* `ipconfig`: network configuration
* `netstat`: monitor network traffic
* `systeminfo`: see infos about the system
* `Get-ChildItem -Path Env:`: see environment variables
* `$Env:windir`: print the value of one environment variable
* `$Env:xxx = 'yyy'`: set an environment variable

Infos on a Local Machine

* `Get-LocalGroup`: list groups (users, administrators...)
* `Get-LocalUser`:list users
* `net localgroup users`:list users in the group "users"
* `net localgroup administrators`: list administrators
* `net user username`: infos about an user

> **Get help**: `help command`, `command help`, `command /?`, or `command /help`.
</div></div>

<hr class="sep-both">

## Windows environment

*Note that you may not be able to use Linux paths such as `/` instead of `c:\\`, as I'm using bellow.*

<div class="row row-cols-md-2"><div>

**Look for (sensitive?) information** üîë

* `cd /`: the root, maybe you will find something interesting?
* `/Users`: usually, each folder is associated with a user
  * `/Users/xxx/Desktop`
  * `/Users/xxx/Documents`
  * You should also check the trash-box
* Maybe check `%appdata%`

<br>

**Windows files** <small>(it may not be `/Windows`, see `$Env:windir`/`$Env:systemroot`)</small>

* in a file explore, enter `%windir%` (or `%systemroot%`)
* `/Windows/System32/config/`: location where the **Security Account Manager** (**SAM**) database file is stored. This file is used to store users, their passwords, their groups... Modern versions of Windows use the NT hash format, commonly referred as NTLM, as the previous format was LM.
</div><div>

**Windows services** <small>(usually use "Win‚úñÔ∏èR" to open one)</small>. These are shortcuts to find in one action the menu you are looking for. Note that extension such as ".exe", or ".msc" are optional.

* `lusrmgr.msc`: list of users/groups
* `msconfig`: see services, manage system configurations
* `lsass` is responsible for authentication within Windows. There is [mimikatz/kiwi](https://github.com/gentilkiwi/mimikatz) (16.2k ‚≠ê) to extract passwords from the memory. For instance, if there is a task running belonging to a user, even if they are not logged in, we can get their password.
* `winver`: show Windows version+build, and licence holder.
* `control system`: open system info (Device/Windows specifications)
* `msinfo32`: system info (raw, can search) + hardware and services
* `UserAccountControlSettings`: change UAC settings
* `compmgmt` is responsable for managing **shares**, **running tasks**, **listing events** ([doc](https://learn.microsoft.com/en-us/windows/win32/eventlog/event-types), monitor performance (`perfmon`/`resmon`), or even manage device hardware/services.
* `regedt32/regedit`: open Windows registry, a database used to store information needed to configure the system for users/applications/devices <small>(ports in use, applications...)</small>. See the [doc](https://learn.microsoft.com/en-us/troubleshoot/windows-server/performance/windows-registry-advanced-users).
</div></div>

<hr class="sep-both">

## Windows privilege escalation

<div class="row row-cols-md-2"><div>

Privilege escalation refer to a process of obtaining super-administrator (a.k.a. Administrator) privileges, starting from a regular user.

* [LOLBAS](https://github.com/LOLBAS-Project/LOLBAS) (4.8k ‚≠ê): similar to GTFOBins on Linux, exploit the Windows executables