https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/

Random stuff that may be useful

* [pspy](https://github.com/DominicBreuker/pspy) (3.2k ‚≠ê): monitor linux processes without root permissions

<hr class="sep-both">

## Linux handy commands

<div class="row row-cols-md-2"><div>

Explore the host

* `bash`: start a bash shell
* `cd`: move to another folder
* `ls`: list files in a folder
* `pwd`: path to the current directory
* `cat`: print (usually small) files
* `less`: read (usually big) files
* `chmod`: change permissions
* `chown`: change owner
* `find`: find a file/folder
* `grep/egrep`: find something in a file
* `su`: change user
* `wget`: download something

> You may use python to do things for you, such as starting a web server to browse files <small>(`python3 -m  http.server`)</small>, or run commands <small>(`python -c 'import pty; pty.spawn("/bin/bash")'`)</small>.
</div><div>

Learn more about your environment

* `w`: who is logged in, and what they are doing
* `who`: who is logged in
* `echo $0`: language used by the current shell
* `whoami`: username
* `last`: list of last logged users
* `id`: username, group...
* `uname -a`: info about the kernel
* `hostname`: info about the host <small>(can be used to find the role of the user such as `website-dev`)</small>
* `ps`: see running processes
* `env`: see environment variables
* `umask`: see the default perms on newly created files
* `getent`: shortcut to get entries about something, such as `passwd`
* `finger`: return a summary of information about a user
</div></div>

<hr class="sep-both">

## Linux environment

<div class="row row-cols-md-2 mt-3"><div>

**Learn more about your computer** üó∫Ô∏è

* `/proc/version`: information about the machine <small> (processes, kernel version, is gcc/... installed?)</small>
* `/etc/*release`: information about the operating system
* `/etc/issue`: alternative to find the OS/version

**Look for (sensitive?) information** üîë

* `/etc/passwd`: usernames, their groups, their home, and their shell
* `/etc/shadow` <small>(root)</small>: username, and their hashed password
* `/etc/group` or `groups`: see groups
* `/etc/gshadow` <small>(root)</small>: groups hashed passwords (if any)
* `/etc/sudoers` <small>(root)</small>: sudoers, and rules applied to them, if any
* `ls -ahl /root/`: see if there are readable files in root's home
* `ls /`: look for unexpected folders in `/`
* `find / -name *id_dsa* 2> /dev/null`: RSA credentials
  * You can use `ssh -i key` to connect using a key
  * The key must have the permissions `u+rw` at least
  * You can try to crack it

<br>

**There may be useful things in logs** üîé

* Check browser history + saved credentials
* `~/.bash_history`: there may be something useful in the bash_history
  * Look for calls to sudo
  * Look for calls to services (mysql...)
* Look for backups <small>(such as emails/conversations/database)</small>
* Look for mails `/var/mail/`
* `/var/log/` (folder): log files
  * Look for firewall logs (`/var/log/syslog`)
  * Look for apache/... logs
  * Look for fail2ban logs
  * Look for ssh logs (`/var/log/auth.log`)
</div><div>

**Cron tasks** ‚≠ê

Cron are the name given to automated tasks on Linux. See `crontab -l` for the tasks of the current user, and `ls -la /etc/cron*` for every cron tasks. Then, you may look for vulnerable cron tasks, meaning tasks using

* files that you can edit,
* environment variables using paths/... that you can edit,
* glob-patterns that you may inject, for instance, if a command runs on a directory in which you can create files, you can create files named after the injectable command line flags.

<br>

**Potentially vulnerable services** üí∏

* Apache: `apache2 -v` / `apache2ctl -M` / `httpd -v`
* Sudo: `sudo -V`
* PostgresSQL: `psql -V`
* MySQL: `mysql --version`
* NFS: see if there are shares, and if root_squashing is enabled

Once you found a service, look for CVE for the given version, and try to use one to escalate to root.

<br>

**Other files that may be useful** üö™

* `/etc/services`: see ports and the services running on it
* `/etc/profile`: set environment variables...

</div></div>

> **NOTE**: don't forget to redirect any errors with `some_command 2> /dev/null`.

<hr class="sep-both">