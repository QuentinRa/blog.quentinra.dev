Fonctions maths
-----------------
set.seed(1)
set.seed(NULL)

Nous avons également du package sampling la fonction srswor( ) qui correspond
à ce que nous avons vu dans le cours théorique: srswor(size, nrow(data))

Et on peut s'amuser à faire un ranking avec la commande rank( ) et ajouter cette colonne au data frame

En utilisant la commande duplicated( ) vous pouvez chercher les doublons
se trouvant dans un data frame dans ou une ou plusieurs colonnes.

na.omit(data)
na.rm = TRUE

Nous allons voir ici en quoi la package VIM peut nous aider à analyser les valeurs manquantes d'un jeu de données.

missing <- aggr()
barmiss(missing) // graphique

Comme la question est fréquemment demandée dans les formations, voici – avant de passer à l'étude du package dplyr
- un résumé concernant les différences entre ses trois fonctions que l'on retourve fréquemment (si nous omettons
vapply(), tapply(), eapply( ), rollapply()8).

base::by Apply a function to a data frame split by Factors

 Permet d'appliquer une fonction R ou personnelle sur une ensemble de colonnes d'un data frame
 par catégories d'une variable.

base::apply(array/matrix, margin, fun, …) Apply Functions Over Array Margins

Permet d'appliquer une fonction R ou personnelle sur une ensemble de colonnes
d'une matrice. Comme nous l'avons montré avec les exemples aux pages 211, 1734 ou encore 1998.

base::lapply(list/vector, fun, …) Apply Functions and return a list

Permet d'appliquer une fonction R ou personnelle sur une liste et renvoie une liste. C'est un cas
relativement rare mais nous le lecteur pourra en voir un exemple à la page 1903. Remarque: Passer le
paramètre simplify=FALSE à sapply( ) donne le même résultat que lapply: sapply(x, fun, simplify=F)

base::sapply(list/vector, fun, …) Apply Functions and return a vector (or optionaly a list)

Permet d'appliquer une fonction R ou personnelle sur une liste vecteur et renvoie une liste ou vecteur. C'est le cas le plus utilisé dans R et lecteur pourra en voir des exemples à la page 419, 178, 1701, 1985.
Mais pour ceux qui ne souhaiteraient pas avoir à reparcourir toutes les pages mentionnées en référence, voici un résumé francophone repris de l'excellent article de blog suivant de Neil Saunders:

https://nsaunders.wordpress.com/2010/08/20/a-brief-introduction-to-apply-in-r/

============================= stop page 1100