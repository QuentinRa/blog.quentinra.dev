
empiriques = grande population ?

certains tests on besoin de conditions (autres tests) pour être faits (normalité, indépendance, ...)
on distingue les tests paramétriques (modèle suit une loi normale) des tests non paramétriques

On peut voir graphiquement avec :code:`plot (default), ggplot (ggplot2), ...`

Statistiques pondérées
	Si on a des valeurs associés à une probabilités dans deux vecteurs, alors on peut soit
	les fusionner soit travailler dessus sans les désagréger avec :code:`wtd.mean(v,p)`,
	:code:`wtd.mean(v,p)`, ... du package :code:`questionr`.

5. Statistiques descriptives
==================================

Le but des statistiques descriptives est de décrire notre échantillon.

Améliorer nos graphiques
	On peut ajouter des droites comme la moyenne sur nos axes pour situer
	la répartition des données.

	On peut également tester la fonction de répartition (:code:`ecdf(rloi(...))` en R)
	en la superposant à un graphique précédemment obtenu (on rappelle le add=TRUE).

6. Statistique inférentielle
==============================

Tests d’égalité de médiane
----------------------------------

avec le test des signes (:code:`SIGN.test(data, md = médiane, alternative = "two.sided", conf.level = 0.95)`)
	| :code:`Prérequis` : aucun

	La fonction est dans le package :code:`BSDA`.

(SignedRank) de Wilcoxon (:code:`wilcox.test(data, mu = mu, alternative = "two.sided", conf.level = 0.95)`)
	| :code:`Prérequis` : population symétrique

	Test plus puissant que le celui des signes (utilise le rang).

Mann–Whitney U (comparaison de 2 médianes)
	| :code:`Prérequis` : 2 échantillons n1 et n2 avec n1+n2>30, fonctions de répartition (ecdf) ne se croisent pas.
	| :code:`Info` : moyenne :math:`n1(n1+n2+1)/2` et variance :code:`n1n2(n1+n2+1)/12`
	| :code:`wilcox.test(data,alternative = "two.sided", conf.level = 0.95)`

	Aussi appelé Mann–Whitney–Wilcoxon (MWW), Wilcoxon rank-sum test, ou Wilcoxon–Mann–Whitney test.

Test sur les données appariés
-------------------------------

Test (de nullité) du coefficient de corrélation linéaire
	| :code:`Prérequis` : test de normalité ou plus de 30 individus, deux variables quantitatives
	| :code:`Résultat` : 0 = corrélation possible, ou valeur entre -1 et 1
	| :code:`Calcul` : :code:`cor.test()` (test de corrélation)

	Matrice des corrélations
		On peut utiliser :code:`cor.mtest(data)$p` du package :code:`corrplot`
		pour voir la matrice des corrélations, avec data une matrice ou un data.frame
		par exemple. On peut voir les corrélations deux à deux.

	On peut utiliser :code:`corrplot(cor(data), method="circle")` ou
	:code:`corrplot(cor(data), method="number")` du package :code:`corrplot`
	pour avoir un aperçu graphique.